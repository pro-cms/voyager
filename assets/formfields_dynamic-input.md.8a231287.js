import{_ as t,c as n,o as a,a as s}from"./app.e6a18615.js";const g='{"title":"Dynamic Input","description":"","frontmatter":{},"headers":[{"level":2,"title":"Available methods","slug":"available-methods"},{"level":3,"title":"addSelect","slug":"addselect"},{"level":3,"title":"addText","slug":"addtext"},{"level":3,"title":"addNumber","slug":"addnumber"},{"level":3,"title":"addCheckboxes","slug":"addcheckboxes"},{"level":3,"title":"addRadios","slug":"addradios"},{"level":3,"title":"addSwitch","slug":"addswitch"},{"level":2,"title":"Knowing the BREAD action","slug":"knowing-the-bread-action"},{"level":2,"title":"Using no keys on inputs","slug":"using-no-keys-on-inputs"},{"level":2,"title":"Examples","slug":"examples"},{"level":3,"title":"Single select without a key","slug":"single-select-without-a-key"},{"level":3,"title":"Single select with a key","slug":"single-select-with-a-key"},{"level":3,"title":"Selects based on previous selection","slug":"selects-based-on-previous-selection"}],"relativePath":"formfields/dynamic-input.md"}',e={},o=s(`<h1 id="dynamic-input" tabindex="-1">Dynamic Input <a class="header-anchor" href="#dynamic-input" aria-hidden="true">#</a></h1><p>The dynamic input is a simple yet powerful formfield allowing you to provide selects, number or text inputs, checkboxes, radios and switches based on your conditions/code.</p><p>To retreive the possible options, Voyager will fetch a route you define in the formfield options.<br> This route has to return a JSON object containing the set of fields you want to show.</p><p>For easy use Voyager provides a class <code>VoyagerAdmin\\Voyager\\Classes\\DynamicInput</code> that helps you create those responses.</p><h2 id="available-methods" tabindex="-1">Available methods <a class="header-anchor" href="#available-methods" aria-hidden="true">#</a></h2><h3 id="addselect" tabindex="-1">addSelect <a class="header-anchor" href="#addselect" aria-hidden="true">#</a></h3><p>Adds a select input to the formfield.</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>key</td><td>string, null</td><td>The key in the final data</td><td>null</td></tr><tr><td>title</td><td>string, array, null</td><td>The title shown above the input</td><td>null</td></tr><tr><td>options</td><td>array</td><td>An array of key =&gt; value pairs. The key is used as the value in the final data</td><td>[]</td></tr><tr><td>multiple</td><td>bool</td><td>Allow multiple selection</td><td>false</td></tr><tr><td>value</td><td>mixed</td><td>The value selected by the user or the default value</td><td>null</td></tr></tbody></table><h3 id="addtext" tabindex="-1">addText <a class="header-anchor" href="#addtext" aria-hidden="true">#</a></h3><p>Add a text input to the formfield.</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>key</td><td>string, null</td><td>The key in the final data</td><td>null</td></tr><tr><td>title</td><td>string, array, null</td><td>The title shown above the input</td><td>null</td></tr><tr><td>placeholder</td><td>string, array, null</td><td>An array of key =&gt; value pairs. The key is used as the value in the final data</td><td>null</td></tr><tr><td>value</td><td>mixed</td><td>The value selected by the user or the default value</td><td>null</td></tr></tbody></table><h3 id="addnumber" tabindex="-1">addNumber <a class="header-anchor" href="#addnumber" aria-hidden="true">#</a></h3><p>Add a number input to the formfield.</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>key</td><td>string, null</td><td>The key in the final data</td><td>null</td></tr><tr><td>title</td><td>string, array, null</td><td>The title shown above the input</td><td>null</td></tr><tr><td>placeholder</td><td>string, array, null</td><td>An array of key =&gt; value pairs. The key is used as the value in the final data</td><td>null</td></tr><tr><td>value</td><td>int, null</td><td>The value selected by the user or the default value</td><td>null</td></tr><tr><td>min</td><td>int, null</td><td>The minimum value that can be entered. Null means negative infinite</td><td>null</td></tr><tr><td>max</td><td>int, null</td><td>The maximum value that can be entered. Null means infinite</td><td>null</td></tr></tbody></table><h3 id="addcheckboxes" tabindex="-1">addCheckboxes <a class="header-anchor" href="#addcheckboxes" aria-hidden="true">#</a></h3><p>Adds multiple checkboxes to the formfield.</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>key</td><td>string, null</td><td>The key in the final data</td><td>null</td></tr><tr><td>title</td><td>string, array, null</td><td>The title shown above the input</td><td>null</td></tr><tr><td>options</td><td>array</td><td>An array of key =&gt; value pairs. The key is used as the value in the final data</td><td>[]</td></tr><tr><td>value</td><td>mixed</td><td>The values selected by the user or the default value</td><td>null</td></tr></tbody></table><h3 id="addradios" tabindex="-1">addRadios <a class="header-anchor" href="#addradios" aria-hidden="true">#</a></h3><p>Adds multiple radios to the formfield.</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>key</td><td>string, null</td><td>The key in the final data</td><td>null</td></tr><tr><td>title</td><td>string, array, null</td><td>The title shown above the input</td><td>null</td></tr><tr><td>options</td><td>array</td><td>An array of key =&gt; value pairs. The key is used as the value in the final data</td><td>[]</td></tr><tr><td>value</td><td>mixed</td><td>The value selected by the user or the default value</td><td>null</td></tr></tbody></table><h3 id="addswitch" tabindex="-1">addSwitch <a class="header-anchor" href="#addswitch" aria-hidden="true">#</a></h3><p>Add a simple switch to the formfield.</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>key</td><td>string, null</td><td>The key in the final data</td><td>null</td></tr><tr><td>title</td><td>string, array, null</td><td>The title shown above the input</td><td>null</td></tr><tr><td>value</td><td>mixed</td><td>The value when the switch is active</td><td>null</td></tr></tbody></table><h2 id="knowing-the-bread-action" tabindex="-1">Knowing the BREAD action <a class="header-anchor" href="#knowing-the-bread-action" aria-hidden="true">#</a></h2><p>The incoming request contains a parameter <code>bread_action</code> which can be <code>query</code>, <code>browse</code>, <code>edit</code> or <code>add</code>.</p><h2 id="using-no-keys-on-inputs" tabindex="-1">Using no keys on inputs <a class="header-anchor" href="#using-no-keys-on-inputs" aria-hidden="true">#</a></h2><p>Sometimes its useful to use no key on an input.<br> That way a single select with multiple=false will only store the selected value in the database instead of a key-value pair.<br> But be aware that only one input total without a key can exist in a formfield.<br> Otherwise an Exception <code>Only one input without a key can exist!</code> will be thrown.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-hidden="true">#</a></h2><h3 id="single-select-without-a-key" tabindex="-1">Single select without a key <a class="header-anchor" href="#single-select-without-a-key" aria-hidden="true">#</a></h3><p>This example shows a single select with two options <code>English</code> and <code>German</code>.</p><div class="language-php"><pre><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">VoyagerAdmin<span class="token punctuation">\\</span>Voyager<span class="token punctuation">\\</span>Classes<span class="token punctuation">\\</span>DynamicInput</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyController</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DynamicInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">addSelect</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Select a language&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;en&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;English&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;de&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;German&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre></div><p>The data stored in the database will be <code>en</code> or <code>de</code>.</p><h3 id="single-select-with-a-key" tabindex="-1">Single select with a key <a class="header-anchor" href="#single-select-with-a-key" aria-hidden="true">#</a></h3><p>This example shows a single select with two options <code>English</code> and <code>German</code>.</p><div class="language-php"><pre><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">VoyagerAdmin<span class="token punctuation">\\</span>Voyager<span class="token punctuation">\\</span>Classes<span class="token punctuation">\\</span>DynamicInput</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyController</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DynamicInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">addSelect</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;language&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Select a language&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;en&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;English&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;de&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;German&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre></div><p>The data stored in the database will be <code>[&#39;language&#39; =&gt; &#39;en&#39;]</code> or <code>[&#39;language&#39; =&gt; &#39;de&#39;]</code>.</p><h3 id="selects-based-on-previous-selection" tabindex="-1">Selects based on previous selection <a class="header-anchor" href="#selects-based-on-previous-selection" aria-hidden="true">#</a></h3><p>In this example the user is asked to select a country first.<br> Once the country is selected, another select is shown which allows the user to enter the state.</p><div class="language-php"><pre><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">VoyagerAdmin<span class="token punctuation">\\</span>Voyager<span class="token punctuation">\\</span>Classes<span class="token punctuation">\\</span>DynamicInput</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyController</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$country</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;country&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$input</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DynamicInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">addSelect</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;country&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Select your country&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;us&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;United States&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;de&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Germany&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$country</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;us&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$input</span><span class="token operator">-&gt;</span><span class="token function">addSelect</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;state&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Select your state&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;ny&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;New York&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;wt&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Washington&#39;</span><span class="token punctuation">,</span> <span class="token comment">/* ... */</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$country</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;de&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$input</span><span class="token operator">-&gt;</span><span class="token function">addSelect</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;state&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Select your state&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;by&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Bavaria&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;ber&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Berlin&#39;</span><span class="token punctuation">,</span> <span class="token comment">/* ... */</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token variable">$input</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre></div><p>When selecting country <code>United States</code> and state <code>New York</code>, the data stored in the database will look like this:</p><div class="language-json"><pre><code><span class="token punctuation">{</span>
    <span class="token property">&quot;country&quot;</span><span class="token operator">:</span> <span class="token string">&quot;us&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;state&quot;</span><span class="token operator">:</span> <span class="token string">&quot;New York&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,41),p=[o];function l(i,d,c,r,u,h){return a(),n("div",null,p)}var y=t(e,[["render",l]]);export{g as __pageData,y as default};
