import{_ as s,c as n,o as e,a}from"./app.e6a18615.js";const f='{"title":"Preferences","description":"","frontmatter":{},"headers":[{"level":2,"title":"Clearing preferences","slug":"clearing-preferences"}],"relativePath":"plugins/preferences.md"}',t={},p=a(`<h1 id="preferences" tabindex="-1">Preferences <a class="header-anchor" href="#preferences" aria-hidden="true">#</a></h1><p>A plugin can store and access preferences which are stored on the filesystem.<br> To write a preferences, simply call</p><div class="language-php"><pre><code><span class="token comment">// Not translatable</span>
<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">preferences</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my_key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;My value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Translatable</span>
<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">preferences</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my_key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;My value&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;en&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">preferences</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my_key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Mein Wert&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;de&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>inside your plugin class.<br> To get a preference, call:</p><div class="language-php"><pre><code><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">preferences</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my_key&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Default value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>If your preference is translatable, it will be automatically translated to the current locale.<br> If you don&#39;t want your value to be translated, simply pass <code>false</code> as the third parameter or the locale to translate it to another locale.</p><h2 id="clearing-preferences" tabindex="-1">Clearing preferences <a class="header-anchor" href="#clearing-preferences" aria-hidden="true">#</a></h2><p>You can delete one preference by calling <code>$this-&gt;preferences-&gt;remove(&#39;my_key&#39;);</code> or clear all preferences by calling <code>$this-&gt;preferences-&gt;removeAll();</code></p>`,8),o=[p];function r(c,l,i,u,g,k){return e(),n("div",null,o)}var h=s(t,[["render",r]]);export{f as __pageData,h as default};
