import{_ as n,c as a,o as s,a as t}from"./app.e6a18615.js";const _='{"title":"Language","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/language.md"}',p={},e=t(`<h1 id="language" tabindex="-1">Language <a class="header-anchor" href="#language" aria-hidden="true">#</a></h1><p>If you want to access your localization strings from inside your Vue components, simply tell Voyager they exist:</p><div class="language-php"><pre><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">namespace</span> <span class="token package">Me<span class="token punctuation">\\</span>MyPlugin</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>ServiceProvider</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Voyager<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Voyager</span> <span class="token keyword">as</span> Voyager<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Voyager<span class="token punctuation">\\</span>Admin<span class="token punctuation">\\</span>Manager<span class="token punctuation">\\</span>Plugins</span> <span class="token keyword">as</span> PluginManager<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">MyPluginServiceProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceProvider</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">boot</span><span class="token punctuation">(</span><span class="token class-name type-declaration">PluginManager</span> <span class="token variable">$pluginmanager</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$pluginmanager</span><span class="token operator">-&gt;</span><span class="token function">addPlugin</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Me<span class="token punctuation">\\</span>MyPlugin<span class="token punctuation">\\</span>MyPlugin</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">loadTranslationsFrom</span><span class="token punctuation">(</span><span class="token function">realpath</span><span class="token punctuation">(</span><span class="token constant">__DIR__</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;/../resources/lang&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;my-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name static-context">Voyager</span><span class="token operator">::</span><span class="token function">addTranslations</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my-plugin&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;generic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre></div><p>You can now access the strings like <code>__(&#39;my-plugin::generic.my-string&#39;)</code></p>`,4),o=[e];function c(l,i,u,r,k,g){return s(),a("div",null,o)}var y=n(p,[["render",c]]);export{_ as __pageData,y as default};
