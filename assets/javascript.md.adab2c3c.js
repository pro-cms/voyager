import{_ as n,c as s,o as a,a as t}from"./app.e6a18615.js";const g='{"title":"Javascript","description":"","frontmatter":{},"headers":[{"level":2,"title":"Notifications","slug":"notifications"},{"level":3,"title":"Simple","slug":"simple"},{"level":3,"title":"Title and message","slug":"title-and-message"},{"level":3,"title":"Timeout","slug":"timeout"},{"level":3,"title":"Indeterminate","slug":"indeterminate"},{"level":3,"title":"Confirm","slug":"confirm"},{"level":3,"title":"Prompt","slug":"prompt"},{"level":3,"title":"Select","slug":"select"},{"level":3,"title":"Methods","slug":"methods"},{"level":2,"title":"Store","slug":"store"},{"level":2,"title":"Eventbus","slug":"eventbus"},{"level":2,"title":"Slugify","slug":"slugify"},{"level":2,"title":"Axios","slug":"axios"},{"level":2,"title":"Debounce","slug":"debounce"},{"level":2,"title":"A note on Vite","slug":"a-note-on-vite"}],"relativePath":"javascript.md"}',o={},e=t(`<h1 id="javascript" tabindex="-1">Javascript <a class="header-anchor" href="#javascript" aria-hidden="true">#</a></h1><p>This page covers some of the publicy available APIs Voyager exposes for you to use.</p><h2 id="notifications" tabindex="-1">Notifications <a class="header-anchor" href="#notifications" aria-hidden="true">#</a></h2><p>Allows you to fluently display notifications in the UI.</p><h3 id="simple" tabindex="-1">Simple <a class="header-anchor" href="#simple" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">new</span> $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notification</span><span class="token punctuation">(</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="title-and-message" tabindex="-1">Title and message <a class="header-anchor" href="#title-and-message" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">new</span> $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notification</span><span class="token punctuation">(</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token string">&#39;Message&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="timeout" tabindex="-1">Timeout <a class="header-anchor" href="#timeout" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">new</span> $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notification</span><span class="token punctuation">(</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 7500ms timeout, or:</span>
<span class="token keyword">new</span> $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notification</span><span class="token punctuation">(</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">timeout</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Custom (5000ms) timeout</span>
</code></pre></div><h3 id="indeterminate" tabindex="-1">Indeterminate <a class="header-anchor" href="#indeterminate" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">new</span> $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notification</span><span class="token punctuation">(</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indeterminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="confirm" tabindex="-1">Confirm <a class="header-anchor" href="#confirm" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">new</span> $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notification</span><span class="token punctuation">(</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* result is boolean */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="prompt" tabindex="-1">Prompt <a class="header-anchor" href="#prompt" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">new</span> $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notification</span><span class="token punctuation">(</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&#39;Value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* result is the entered text or false */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="select" tabindex="-1">Select <a class="header-anchor" href="#select" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">new</span> $<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notification</span><span class="token punctuation">(</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;Value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* result is a key or false */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h3><table><thead><tr><th><strong>Method</strong></th><th><strong>Description</strong></th><th><strong>Arguments</strong></th></tr></thead><tbody><tr><td>constructor</td><td>Creates a new notification</td><td>title: string, the title</td></tr><tr><td>title</td><td>Sets the title of a notification</td><td>title: string, the title</td></tr><tr><td>message</td><td>Sets the message of a notification</td><td>message: string, the message</td></tr><tr><td>icon</td><td>Sets the icon of the notification</td><td>icon: string, the name of an icon</td></tr><tr><td>color</td><td>Sets the color of the notification</td><td>color: string, any of the available colors</td></tr><tr><td>timeout</td><td>Sets the timeout after which the notification will automatically close</td><td>timeout: ?int, number of ms after which the notification will close. Dont pass this arguments to timeout after 7500ms</td></tr><tr><td>indetermine</td><td>Shows an infinite bar</td><td>None</td></tr><tr><td>prompt</td><td>Shows an input box. Automatically adds buttons when no other exist</td><td>value: string, the default value or a variable that will be modified</td></tr><tr><td>confirm</td><td>Shows a <code>Yes</code> and a <code>No</code> button</td><td>None</td></tr><tr><td>select</td><td>Show a select box. Automatically adds buttons when no other exist</td><td>options: Object, the options as a key: value pair. Use this method multiple times to add multiple selects.</td></tr><tr><td>addButton</td><td>Add a button to the notification. When this method is called before calling <code>confirm</code> , <code>select</code> or <code>prompt</code> it will override the standard buttons.</td><td>button: Object, Button data containing: <code>key</code> will be passed to the promise <code>value</code> will be shown as button text (can be a translation key) <code>color</code> the color of the button</td></tr><tr><td>show</td><td>Show the notification. If <code>confirm</code>, <code>prompt</code> or <code>select</code> is used, will return a <code>Promise</code></td><td>None</td></tr></tbody></table><h2 id="store" tabindex="-1">Store <a class="header-anchor" href="#store" aria-hidden="true">#</a></h2><p>Voyager implements a very simple store that holds some of the most important data used throughout of Voyager.<br> This includes BREADs, menu items, tables, formfields and much more.<br> Check the whole store <a href="https://github.com/voyager-admin/voyager/blob/2.x/resources/assets/js/store.ts" target="_blank" rel="noopener noreferrer">here</a></p><p>In your Vue components you are able to access the store as easy as:</p><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">You are logged in as </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="eventbus" tabindex="-1">Eventbus <a class="header-anchor" href="#eventbus" aria-hidden="true">#</a></h2><p>Voyager fires various events and listenes to them in another place.<br> For example, when updating the <code>admin.sidebar_title</code> setting, it will automatically update while you are typing.<br> To fire and listen to your own events, use the following example:</p><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>$eventbus<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;my-event&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;My payload&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$eventbus<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;my-event&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>To only listen for an event (<code>setting-updated</code> in this example):</p><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$eventbus<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;setting-updated&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>setting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Setting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>setting<span class="token punctuation">.</span>group<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>setting<span class="token punctuation">.</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> has been updated to: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>setting<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="slugify" tabindex="-1">Slugify <a class="header-anchor" href="#slugify" aria-hidden="true">#</a></h2><p>Voyager uses <a href="https://github.com/simov/slugify" target="_blank" rel="noopener noreferrer">slugify</a> under the hood.<br> Check out its README to learn about its usage.</p><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$<span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$slugify</span><span class="token punctuation">(</span><span class="token string">&#39;A not slugged string!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="axios" tabindex="-1">Axios <a class="header-anchor" href="#axios" aria-hidden="true">#</a></h2><p>Voyager uses <a href="https://axios-http.com/" target="_blank" rel="noopener noreferrer">axios</a> to make Ajax requests.<br> To use axios in your own code, use:</p><div class="language-javascript"><pre><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Please read <a href="#a-note-on-vite">this</a> to found out how to import axios without installing it locally.</p><h2 id="debounce" tabindex="-1">Debounce <a class="header-anchor" href="#debounce" aria-hidden="true">#</a></h2><p>To use <a href="https://github.com/component/debounce" target="_blank" rel="noopener noreferrer">debounce</a> simply use:</p><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$debounce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;I am debounced&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="a-note-on-vite" tabindex="-1">A note on Vite <a class="header-anchor" href="#a-note-on-vite" aria-hidden="true">#</a></h2><p>Axios and Vue are exposed to the browsers <code>window</code> object.<br> This allows you to use those plugins in your code without installing them locally and thus reducing bundle size.<br> In your <code>vite.config.js</code> you can use the following to exclude them from being bundled:</p><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">rollupOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">external</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">globals</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">vue</span><span class="token operator">:</span> <span class="token string">&#39;Vue&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">axios</span><span class="token operator">:</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>The rest of the methods/APIs are set into Vues <code>globalProperties</code>.</p>`,43),p=[e];function c(i,u,l,r,k,d){return a(),s("div",null,p)}var f=n(o,[["render",c]]);export{g as __pageData,f as default};
